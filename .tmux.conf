set-option -g default-shell $SHELL

# Tmux should be pretty, we need 256 color for that
set -g default-terminal "xterm-256color"
set -g terminal-overrides ',xterm-256color:Tc'

# Status bar color
set -g status-bg black
set -g status-fg white

# Window names would change on directory change if not
# Seems to be oh my zshs fault
set-option -g allow-rename off

# Tmux uses a 'control key', let's set it to 'Ctrl-a'
# Reason: 'Ctrl-a' is easier to reach than 'Ctrl-b'
set -g prefix C-a
unbind C-b

# command delay? We don't want that, make it short
set -sg escape-time 1

# Set the numbering of windows to go from 1 instead
# of 0 - silly programmers :|
set-option -g base-index 1
setw -g pane-base-index 1

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Integrate tmux copy with macos.
# This assumes previous: brew install reattach-to-user-namespace
# We check that 'reattach-to-user-namespace' is installed first.
if-shell "hash reattach-to-user-namespace" \
    "bind -T copy-mode-vi y send -X copy-pipe-and-cancel \"reattach-to-user-namespace pbcopy\"; bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel \"reattach-to-user-namespace pbcopy\"" \
    "bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel"

# Enable mouse for different versions of tmux
# (If 'awk' exits with status 0, 'if-shell' evaluates to true)
# tmux < v2.1:
if-shell "tmux -V | awk '{exit !($2 < \"2.1\")}'" \
    "setw -g mode-mouse on ; set -g mouse-select-pane on ; set -g mouse-resize-pane on ; set -g mouse-select-window on ;"
# tmux >= v2.1:
if-shell "tmux -V | awk '{exit !($2 >= \"2.1\")}'" \
    "set -g mouse on ;"

# Send ctrl+a by doing prefix+a a
bind-key a send-prefix

# Theme
set-option -g status-position bottom
set-window-option -g xterm-keys on
set-option -g status-fg white
set-option -g status-bg default
set-option -g status-attr default
set-window-option -g window-status-fg "#666666"
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr default
set-option -g message-fg white
set-option -g message-bg default
set-option -g message-attr bright
set -g status-left " "
set -g status-justify left
setw -g window-status-format         ' #W '
setw -g window-status-current-format ' #W '
set -g status-right " "

# Window automatic renaming
set-option -g allow-rename off

# ptpython pane
bind-key -T prefix k split-window -h "source $(pipenv --venv)/bin/activate; ipython"

# restart pane
bind-key r respawn-pane -k

# # Dynamic load of tmux.conf
# bind r source-file ~/.tmux.conf

set-window-option -g status-left-fg white
set-window-option -g status-left-bg default
set-window-option -g status-right-fg white
set-window-option -g status-right-bg default
set -g status-right 'Session: #S | #(exec tmux ls| wc -l ) sessions running'


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
